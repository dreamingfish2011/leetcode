import numpy as np
#dp[0][j] means the number of single numbers whose result is j
#dp[1][j] means the number of pairs whose result is j
#dp[2][j] means the number of triples whose result is j
#thus the final answer = dp[2][0].
class Solution:
    def countTriplets(self, A) -> int:
        dp = np.zeros((3, 1 << 16), dtype =int)
        # dp=[[],[],[]]
        # for k in range(0, 3):
        #     dp[k] =[0 for i in range(0,(1<<16))]
        for a in A:
            dp[0][a] += 1
        for i in range(1, 3):
            for b in range(0, 1 << 16):
                if dp[i - 1][b] >0 :
                    for a in A:
                        dp[i][a & b] += dp[i - 1][b]
        return dp[2][0]


if __name__ == '__main__':
    t = Solution()
    ratings = [1925,22798,653,63853,53674,4621,58552,13630,13421,44155,61489,8073,470,24191,1615,39639,56306,12254,7365,22573,62860,8530,63341,23739,31022,19177,61415,62793,41675,12061,65074,6722,38066,10250,58830,61975,52716,20702,15914,49470,19074,27511,3031,8666,1346,5106,4797,27540,36095,48554,9324,27668,41744,5541,29151,24199,62189,3791,26779,27343,47722,21015,13368,19222,30860,62276,52200,18151,36580,45101,52144,29239,26134,50308,28292,16250,29717,61414,9343,30306,41766,31672,13345,120,45809,40549,509,19566,50373,41216,35730,10238,46287,30895,44445,49813,15228,49938,18355,64488,7918,57915,2657,16814,34478,38116,25967,6686,16554,18572,49494,59557,39020,2323,51920,20028,22275,34746,16321,60291,10718,27186,18985,34067,37616,41100,34824,26922,41588,26438,51023,51653,19153,24366,41209,10293,45680,24997,38735,9144,43794,23203,30976,27204,31242,45527,20856,42733,3946,19672,48838,3434,40707,1674,30902,58231,662,34526,4355,56826,44977,48624,43844,420,2698,40689,65515,57222,45854,47651,14856,49257,18869,6911,30205,21639,11026,27637,58798,28525,29313,46453,34351,8468,59663,29106,51730,25485,52877,25528,14428,12857,61606,38438,3263,25450,15337,5548,12239,3734]
    result = t.countTriplets(ratings)
    print(result)
